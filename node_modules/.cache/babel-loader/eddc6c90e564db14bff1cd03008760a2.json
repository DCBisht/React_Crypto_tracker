{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\React_Crypto_tracker_Luganodes_Task\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles, ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { CryptoState } from \"../CryptoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh'\n  },\n  title: {\n    marginBottom: '20px'\n  },\n  input: {\n    marginBottom: '20px',\n    width: '100%'\n  },\n  button: {\n    width: '100%'\n  }\n}));\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\"\n    },\n    type: \"dark\"\n  }\n});\n\nfunction Signup() {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setUser\n  } = CryptoState();\n\n  const handleSignup = event => {\n    event.preventDefault(); // TODO: Implement signup logic and set user state.\n\n    setUser(username);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: classes.title,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignup,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          label: \"Username\",\n          variant: \"outlined\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: classes.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          label: \"Password\",\n          variant: \"outlined\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: classes.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"M+QjRZOlGiiIuQKpex9b4KTdXSY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/Task/React_Crypto_tracker_Luganodes_Task/src/components/Signup.js"],"names":["Button","Container","TextField","Typography","makeStyles","ThemeProvider","createTheme","useState","CryptoState","useStyles","theme","container","display","flexDirection","alignItems","justifyContent","height","title","marginBottom","input","width","button","darkTheme","palette","primary","main","type","Signup","classes","username","setUsername","password","setPassword","setUser","handleSignup","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import { Button, Container, TextField, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, ThemeProvider, createTheme } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n  },\r\n  title: {\r\n    marginBottom: '20px',\r\n  },\r\n  input: {\r\n    marginBottom: '20px',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fff\",\r\n    },\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nfunction Signup() {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setUser } = CryptoState();\r\n\r\n  const handleSignup = (event) => {\r\n    event.preventDefault();\r\n    // TODO: Implement signup logic and set user state.\r\n    setUser(username);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Container maxWidth=\"sm\" className={classes.container}>\r\n        <Typography variant=\"h4\" className={classes.title}>Sign Up</Typography>\r\n        <form onSubmit={handleSignup}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n            className={classes.input}\r\n            required\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            className={classes.input}\r\n            required\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}